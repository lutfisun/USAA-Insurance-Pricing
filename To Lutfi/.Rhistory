ppdata2$CoeffVehicleAge7 <- lmcoeffs$x[26]
ppdata2$CoeffVehicleAge8 <- lmcoeffs$x[27]
ppdata2$CoeffVehicleAge9 <- lmcoeffs$x[28]
ppdata2$CoeffVehicleAge10 <- lmcoeffs$x[29]
ppdata2$CoeffVehicleAge11 <- lmcoeffs$x[30]
ppdata2$CoeffVehicleAge12 <- lmcoeffs$x[31]
ppdata2$CoeffVehicleAge13 <- lmcoeffs$x[32]
ppdata2$CoeffVehicleAge14 <- lmcoeffs$x[33]
ppdata2$CoeffVehicleAge15 <- lmcoeffs$x[34]
#attach(ppdata2)
ppdata$ManualFitLM <- ( (CoeffBase) +
(CoeffMale * GenderMale ) +
(CoeffRatingArea1B * RatingArea1B ) +
(CoeffRatingArea2A * RatingArea2A ) +
(CoeffRatingArea2B * RatingArea2B ) +
(CoeffRatingArea3A * RatingArea3A ) +
(CoeffRatingArea3B * RatingArea3B ) +
(CoeffRatingArea4A * RatingArea4A ) +
(CoeffRatingArea4B * RatingArea4B ) +
(CoeffRatingArea5A * RatingArea5A ) +
(CoeffRatingArea5B * RatingArea5B ) +
(CoeffRatingArea6A * RatingArea6A ) +
(CoeffNCD1 * NCD1 ) +
(CoeffNCD2 * NCD2 ) +
(CoeffNCD3 * NCD3 ) +
(CoeffNCD4 * NCD4 ) +
(CoeffNCDUnknown * NCDUnknown ) +
(CoeffProtectedNCDY * ProtectedNCDY ) +
(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) +
(CoeffVehicleAge1 * VehicleAge1 ) +
(CoeffVehicleAge2 * VehicleAge2 ) +
(CoeffVehicleAge3 * VehicleAge3 ) +
(CoeffVehicleAge4 * VehicleAge4 ) +
(CoeffVehicleAge5 * VehicleAge5 ) +
(CoeffVehicleAge6 * VehicleAge6 ) +
(CoeffVehicleAge7 * VehicleAge7 ) +
(CoeffVehicleAge8 * VehicleAge8 ) +
(CoeffVehicleAge9 * VehicleAge9 ) +
(CoeffVehicleAge10 * VehicleAge10 ) +
(CoeffVehicleAge11 * VehicleAge11 ) +
(CoeffVehicleAge12 * VehicleAge12 ) +
(CoeffVehicleAge13 * VehicleAge13 ) +
(CoeffVehicleAge14 * VehicleAge14 ) +
(CoeffVehicleAge15 * VehicleAge15 )
)
ppdata$AutoFit <- fitted(glm)
ppdata$AutoFitLM <- fitted(lm)
#can manually check that they give the same result
mean((ppdata$AutoFit - ppdata$ManualFit)**2) # 4.147563e-23 is an extremely minimal difference and probably due to rounding.
#install.packages("xlsx")
#library(xlsx)
#write.xlsx(ppdata, "Y:\\Insurance Pricing Project\\Phase1Deliverable.xlsx", sheetName = "Fitted Values", sheetName = "Model Coefficients GLM", sheetName = "Model Coefficients (lm)", append = TRUE, row.names = FALSE)
write.csv(ppdata, "Y:\\Insurance Pricing Project\\Phase1Deliverable.csv")
#Housekeeping
rm(list=ls())
cat("\014")
#Install and load tweedie & statmod packages
library(tweedie)
library(statmod)
library(broom)
library(plyr)
#Read in data
ppdata_new <- read.csv("business.csv")
#Phase II, Task 2: calculating new current and proposed premiums
ppdata_new$GenderCurrent = 1.03
ppdata_new$GenderProp = 1.182
library(dummies)
ppdata3 <- dummy.data.frame(ppdata_new) #dummies help picking the right coefficient for the right variable.
names(ppdata3)
#lots of manual labor below. could have done this probably more neatly with loops but this also worked out.
ppdata3$CoeffBase <- glm_simple_coeffs$x[1]
ppdata3$CoeffMale <- glm_simple_coeffs$x[2]
ppdata3$CoeffRatingArea1B <- glm_simple_coeffs$x[3]
ppdata3$CoeffRatingArea2A <- glm_simple_coeffs$x[4]
ppdata3$CoeffRatingArea2B <- glm_simple_coeffs$x[5]
ppdata3$CoeffRatingArea3A <- glm_simple_coeffs$x[6]
ppdata3$CoeffRatingArea3B <- glm_simple_coeffs$x[7]
ppdata3$CoeffRatingArea4A <- glm_simple_coeffs$x[8]
ppdata3$CoeffRatingArea4B <- glm_simple_coeffs$x[9]
ppdata3$CoeffRatingArea5A <- glm_simple_coeffs$x[10]
ppdata3$CoeffRatingArea5B <- glm_simple_coeffs$x[11]
ppdata3$CoeffRatingArea6A <- glm_simple_coeffs$x[12]
ppdata3$CoeffNCD <- glm_simple_coeffs$x[13]
ppdata3$CoeffProtectedNCDY <- glm_simple_coeffs$x[14]
ppdata3$CoeffDrivingRestrictionNamed <- glm_simple_coeffs$x[15]
ppdata3$CoeffVehicleAge <- glm_simple_coeffs$x[16]
attach(ppdata3)
ppdata$NewPrem <- ( 500 *
exp(CoeffMale * GenderMale ) *
exp(CoeffRatingArea1B * RatingArea1B ) *
exp(CoeffRatingArea2A * RatingArea2A ) *
exp(CoeffRatingArea2B * RatingArea2B ) *
exp(CoeffRatingArea3A * RatingArea3A ) *
exp(CoeffRatingArea3B * RatingArea3B ) *
exp(CoeffRatingArea4A * RatingArea4A ) *
exp(CoeffRatingArea4B * RatingArea4B ) *
exp(CoeffRatingArea5A * RatingArea5A ) *
exp(CoeffRatingArea5B * RatingArea5B ) *
exp(CoeffRatingArea6A * RatingArea6A ) *
exp(CoeffNCD * ppdata$NCD ) *
exp(CoeffProtectedNCDY * ProtectedNCDY ) *
exp(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) *
exp(CoeffVehicleAge * ppdata$VehicleAge )
)
#attach(ppdata2)
meanOld = mean(ppdata$PurePrem)
meanNew = mean(ppdata$NewPrem)
write.csv(ppdata, "Y:\\Insurance Pricing Project\\Phase2Deliverable.csv")
#Read in data
ppdata <- read.csv("~/Desktop/Math Modelling Project on Insurance Pricing/Data/ppdata_train.csv")
levels(ppdata$NCD)
revalue(ppdata$NCD, c("4+" = "4")) -> ppdata$NCD  #even though we use NCD as categorical variable 4+ becomes a trouble.
#R interprets + as a function instead of a string
ppdata$VehicleAge <- as.factor(ppdata$VehicleAge) #treating vehicle age as a categorical variable
#Use tweedie.profle function to maximize p (this could take 30-60 minutes).
#Only use the next two lines after you switch to the testing dataset.
#p <- tweedie.profile(ppdata$DevelopedLoss ~ 1, p.vec = seq(1.1,1.7,0.1), do.plot=TRUE, do.ci=FALSE)
#p$p.max
#Fit tweedie GLM with log link
glm <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + as.factor(VehicleAge),
data = ppdata,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
#FIT GLM WITH THE NAME glm.  Use the glm object in R with family = tweedie(var.power=p, link.power=0) and weights=Exposures
#to model PurePrem.  As we discussed earlier, make sure to use as.factor(VehicleAge) so that R does not try to fit VehicleAge with
#a curve.  You will be using all six rating factors (Gender, RatingArea, NCD, ProtectedNCD, DrivingRestriction, VehicleAge).
#Fit classical linear model
lm <- lm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata, weights=Exposures)
#FIT LM WITH THE NAME lm.  It will include the exact same rating factors as your glm object.  Code this exactly how you
#coded the demo
#Summary of tweedie glm
summary(glm)
#Summary of classical linear model
summary(lm)
#Calculate mean squared errors for both model (Which mean squared error is smaller?)
mean(resid(glm)^2)
mean(resid(lm)^2)
#Pull coefficients from tweedie glm
glmcoeffs <- tidy(coef(glm))
lmcoeffs <-tidy(coef(lm))
#Export coefficients for rating
write.table(lmcoeffs, file = "lmcoeffs.csv", sep=",")
write.table(glmcoeffs, file = "glmcoeffs.csv", sep=",")
glmcoeffs$exp <- exp(glmcoeffs$x)
# Manually calculate Pure Premium using GLM regression coefficients
library(dummies)
ppdata2 <- dummy.data.frame(ppdata) #dummies help picking the right coefficient for the right variable.
names(ppdata2)
#lots of manual labor below. could have done this probably more neatly with loops but this also worked out.
ppdata2$CoeffBase <- glmcoeffs$x[1]
ppdata2$CoeffMale <- glmcoeffs$x[2]
ppdata2$CoeffRatingArea1B <- glmcoeffs$x[3]
ppdata2$CoeffRatingArea2A <- glmcoeffs$x[4]
ppdata2$CoeffRatingArea2B <- glmcoeffs$x[5]
ppdata2$CoeffRatingArea3A <- glmcoeffs$x[6]
ppdata2$CoeffRatingArea3B <- glmcoeffs$x[7]
ppdata2$CoeffRatingArea4A <- glmcoeffs$x[8]
ppdata2$CoeffRatingArea4B <- glmcoeffs$x[9]
ppdata2$CoeffRatingArea5A <- glmcoeffs$x[10]
ppdata2$CoeffRatingArea5B <- glmcoeffs$x[11]
ppdata2$CoeffRatingArea6A <- glmcoeffs$x[12]
ppdata2$CoeffNCD1 <- glmcoeffs$x[13]
ppdata2$CoeffNCD2 <- glmcoeffs$x[14]
ppdata2$CoeffNCD3 <- glmcoeffs$x[15]
ppdata2$CoeffNCD4 <- glmcoeffs$x[16]
ppdata2$CoeffNCDUnknown <- glmcoeffs$x[17]
ppdata2$CoeffProtectedNCDY <- glmcoeffs$x[18]
ppdata2$CoeffDrivingRestrictionNamed <- glmcoeffs$x[19]
ppdata2$CoeffVehicleAge1 <- glmcoeffs$x[20]
ppdata2$CoeffVehicleAge2 <- glmcoeffs$x[21]
ppdata2$CoeffVehicleAge3 <- glmcoeffs$x[22]
ppdata2$CoeffVehicleAge4 <- glmcoeffs$x[23]
ppdata2$CoeffVehicleAge5 <- glmcoeffs$x[24]
ppdata2$CoeffVehicleAge6 <- glmcoeffs$x[25]
ppdata2$CoeffVehicleAge7 <- glmcoeffs$x[26]
ppdata2$CoeffVehicleAge8 <- glmcoeffs$x[27]
ppdata2$CoeffVehicleAge9 <- glmcoeffs$x[28]
ppdata2$CoeffVehicleAge10 <- glmcoeffs$x[29]
ppdata2$CoeffVehicleAge11 <- glmcoeffs$x[30]
ppdata2$CoeffVehicleAge12 <- glmcoeffs$x[31]
ppdata2$CoeffVehicleAge13 <- glmcoeffs$x[32]
ppdata2$CoeffVehicleAge14 <- glmcoeffs$x[33]
ppdata2$CoeffVehicleAge15 <- glmcoeffs$x[34]
attach(ppdata2)
ppdata$ManualFit <- ( exp(CoeffBase) *
exp(CoeffMale * GenderMale ) *
exp(CoeffRatingArea1B * RatingArea1B ) *
exp(CoeffRatingArea2A * RatingArea2A ) *
exp(CoeffRatingArea2B * RatingArea2B ) *
exp(CoeffRatingArea3A * RatingArea3A ) *
exp(CoeffRatingArea3B * RatingArea3B ) *
exp(CoeffRatingArea4A * RatingArea4A ) *
exp(CoeffRatingArea4B * RatingArea4B ) *
exp(CoeffRatingArea5A * RatingArea5A ) *
exp(CoeffRatingArea5B * RatingArea5B ) *
exp(CoeffRatingArea6A * RatingArea6A ) *
exp(CoeffNCD1 * NCD1 ) *
exp(CoeffNCD2 * NCD2 ) *
exp(CoeffNCD3 * NCD3 ) *
exp(CoeffNCD4 * NCD4 ) *
exp(CoeffNCDUnknown * NCDUnknown ) *
exp(CoeffProtectedNCDY * ProtectedNCDY ) *
exp(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) *
exp(CoeffVehicleAge1 * VehicleAge1 ) *
exp(CoeffVehicleAge2 * VehicleAge2 ) *
exp(CoeffVehicleAge3 * VehicleAge3 ) *
exp(CoeffVehicleAge4 * VehicleAge4 ) *
exp(CoeffVehicleAge5 * VehicleAge5 ) *
exp(CoeffVehicleAge6 * VehicleAge6 ) *
exp(CoeffVehicleAge7 * VehicleAge7 ) *
exp(CoeffVehicleAge8 * VehicleAge8 ) *
exp(CoeffVehicleAge9 * VehicleAge9 ) *
exp(CoeffVehicleAge10 * VehicleAge10 ) *
exp(CoeffVehicleAge11 * VehicleAge11 ) *
exp(CoeffVehicleAge12 * VehicleAge12 ) *
exp(CoeffVehicleAge13 * VehicleAge13 ) *
exp(CoeffVehicleAge14 * VehicleAge14 ) *
exp(CoeffVehicleAge15 * VehicleAge15 )
)
ppdata2$CoeffBase <- lmcoeffs$x[1]
ppdata2$CoeffMale <- lmcoeffs$x[2]
ppdata2$CoeffRatingArea1B <- lmcoeffs$x[3]
ppdata2$CoeffRatingArea2A <- lmcoeffs$x[4]
ppdata2$CoeffRatingArea2B <- lmcoeffs$x[5]
ppdata2$CoeffRatingArea3A <- lmcoeffs$x[6]
ppdata2$CoeffRatingArea3B <- lmcoeffs$x[7]
ppdata2$CoeffRatingArea4A <- lmcoeffs$x[8]
ppdata2$CoeffRatingArea4B <- lmcoeffs$x[9]
ppdata2$CoeffRatingArea5A <- lmcoeffs$x[10]
ppdata2$CoeffRatingArea5B <- lmcoeffs$x[11]
ppdata2$CoeffRatingArea6A <- lmcoeffs$x[12]
ppdata2$CoeffNCD1 <- lmcoeffs$x[13]
ppdata2$CoeffNCD2 <- lmcoeffs$x[14]
ppdata2$CoeffNCD3 <- lmcoeffs$x[15]
ppdata2$CoeffNCD4 <- lmcoeffs$x[16]
ppdata2$CoeffNCDUnknown <- lmcoeffs$x[17]
ppdata2$CoeffProtectedNCDY <- lmcoeffs$x[18]
ppdata2$CoeffDrivingRestrictionNamed <- lmcoeffs$x[19]
ppdata2$CoeffVehicleAge1 <- lmcoeffs$x[20]
ppdata2$CoeffVehicleAge2 <- lmcoeffs$x[21]
ppdata2$CoeffVehicleAge3 <- lmcoeffs$x[22]
ppdata2$CoeffVehicleAge4 <- lmcoeffs$x[23]
ppdata2$CoeffVehicleAge5 <- lmcoeffs$x[24]
ppdata2$CoeffVehicleAge6 <- lmcoeffs$x[25]
ppdata2$CoeffVehicleAge7 <- lmcoeffs$x[26]
ppdata2$CoeffVehicleAge8 <- lmcoeffs$x[27]
ppdata2$CoeffVehicleAge9 <- lmcoeffs$x[28]
ppdata2$CoeffVehicleAge10 <- lmcoeffs$x[29]
ppdata2$CoeffVehicleAge11 <- lmcoeffs$x[30]
ppdata2$CoeffVehicleAge12 <- lmcoeffs$x[31]
ppdata2$CoeffVehicleAge13 <- lmcoeffs$x[32]
ppdata2$CoeffVehicleAge14 <- lmcoeffs$x[33]
ppdata2$CoeffVehicleAge15 <- lmcoeffs$x[34]
#attach(ppdata2)
ppdata$ManualFitLM <- ( (CoeffBase) +
(CoeffMale * GenderMale ) +
(CoeffRatingArea1B * RatingArea1B ) +
(CoeffRatingArea2A * RatingArea2A ) +
(CoeffRatingArea2B * RatingArea2B ) +
(CoeffRatingArea3A * RatingArea3A ) +
(CoeffRatingArea3B * RatingArea3B ) +
(CoeffRatingArea4A * RatingArea4A ) +
(CoeffRatingArea4B * RatingArea4B ) +
(CoeffRatingArea5A * RatingArea5A ) +
(CoeffRatingArea5B * RatingArea5B ) +
(CoeffRatingArea6A * RatingArea6A ) +
(CoeffNCD1 * NCD1 ) +
(CoeffNCD2 * NCD2 ) +
(CoeffNCD3 * NCD3 ) +
(CoeffNCD4 * NCD4 ) +
(CoeffNCDUnknown * NCDUnknown ) +
(CoeffProtectedNCDY * ProtectedNCDY ) +
(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) +
(CoeffVehicleAge1 * VehicleAge1 ) +
(CoeffVehicleAge2 * VehicleAge2 ) +
(CoeffVehicleAge3 * VehicleAge3 ) +
(CoeffVehicleAge4 * VehicleAge4 ) +
(CoeffVehicleAge5 * VehicleAge5 ) +
(CoeffVehicleAge6 * VehicleAge6 ) +
(CoeffVehicleAge7 * VehicleAge7 ) +
(CoeffVehicleAge8 * VehicleAge8 ) +
(CoeffVehicleAge9 * VehicleAge9 ) +
(CoeffVehicleAge10 * VehicleAge10 ) +
(CoeffVehicleAge11 * VehicleAge11 ) +
(CoeffVehicleAge12 * VehicleAge12 ) +
(CoeffVehicleAge13 * VehicleAge13 ) +
(CoeffVehicleAge14 * VehicleAge14 ) +
(CoeffVehicleAge15 * VehicleAge15 )
)
ppdata$AutoFit <- fitted(glm)
ppdata$AutoFitLM <- fitted(lm)
#can manually check that they give the same result
mean((ppdata$AutoFit - ppdata$ManualFit)**2) # 4.147563e-23 is an extremely minimal difference and probably due to rounding.
#install.packages("xlsx")
#library(xlsx)
#write.xlsx(ppdata, "Y:\\Insurance Pricing Project\\Phase1Deliverable.xlsx", sheetName = "Fitted Values", sheetName = "Model Coefficients GLM", sheetName = "Model Coefficients (lm)", append = TRUE, row.names = FALSE)
write.csv(ppdata, "Y:\\Insurance Pricing Project\\Phase1Deliverable.csv")
#Read in data
ppdata_new <- read.csv("business.csv")
#Phase II, Task 2: calculating new current and proposed premiums
ppdata_new$GenderCurrent = 1.03
ppdata_new$GenderProp = 1.182
library(dummies)
ppdata3 <- dummy.data.frame(ppdata_new) #dummies help picking the right coefficient for the right variable.
names(ppdata3)
ppdata3$CoeffBase <- glm_simple_coeffs$x[1]
ppdata3$CoeffMale <- glm_simple_coeffs$x[2]
ppdata3$CoeffRatingArea1B <- glm_simple_coeffs$x[3]
#Fit tweedie GLM with log link
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
#Read in data
ppdata_simple <- read.csv("~/Desktop/Math Modelling Project on Insurance Pricing/Data/ppdata_train.csv")
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + as.factor(VehicleAge),
data = ppdata,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm, glm_simple, test="Chisq")
ppdata_simple$VehicleAge <- as.numeric(ppdata_simple$VehicleAge)
# test the glm against this simplification
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm, glm_simple, test="Chisq")
#this revaluing gives an error
revalue(ppdata_simple$NCD, c("4+" = "4")) -> ppdata_simple$NCD
# test the glm against this simplification
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm, glm_simple, test="Chisq")
ppdata_simple$NCD <- as.numeric(ppdata_simple$NCD)
# test the glm against this simplification
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm, glm_simple, test="Chisq")
revalue(ppdata_simple$NCD, c("Unknown" = "3.5")) -> ppdata_simple$NCD
# test the glm against this simplification
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm, glm_simple, test="Chisq")
levels(ppdata_simple$NCD)
View(ppdata_simple)
unique(ppdata_simple$NCD, incomparables = FALSE)
#Fit tweedie GLM with log link
glm_simple <- glm(PurePrem ~  Gender + RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
#Summary of tweedie glm
summary(glm_simple)
#Calculate mean squared errors for both model (Which mean squared error is smaller?)
mean(resid(glm_simple)^2)
#Pull coefficients from tweedie glm
glm_simple_coeffs <- tidy(coef(glm_simple))
glm_simple_coeffs$exp <- exp(glm_simple_coeffs$x)
#sum the old factors, sum the new factors (?seems strange but okay), multiply by base rates, plug into formula
sumOld = sum(glmcoeffs$x)
sumNew = sum(glm_simple_coeffs$x)
#3.1 might supposed to be 1.021 idk
num = (3.1)*(sumOld * 500)
newBase = num/sumNew
# another simplification
glm_gender <- glm(PurePrem ~  RatingArea + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
glm_RatingArea <- glm(PurePrem ~  Gender + NCD + ProtectedNCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
glm_protected <- glm(PurePrem ~  Gender + RatingArea + NCD + DrivingRestriction + VehicleAge,
data = ppdata_simple,family=tweedie(var.power= 1.487755, link.power=0), weights=Exposures)
anova(glm_simple, glm_protected, test="Chisq")
#the following isn't really working
xhp <- seq(-2, 10, 0.1)
plot(xhp, glm_simple_coeffs$x)
library(ggplot2)
theme_set(theme_bw())
Rating_Area <- glm_simple_coeffs$names[3:12]
Coefficient_RA <- glm_simple_coeffs$x[3:12]
rating_table <- data.frame("RatingYo" = 1:10, "Rating Area" = Rating_Area, "Coeff" = Coefficient_RA)
# Draw plot
ggplot(rating_table, aes(x=Rating_Area, y= Coefficient_RA)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Rating Area Coefficients") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ppdata3$CoeffBase <- glm_simple_coeffs$x[1]
ppdata3$CoeffMale <- glm_simple_coeffs$x[2]
ppdata3$CoeffRatingArea1B <- glm_simple_coeffs$x[3]
ppdata3$CoeffRatingArea2A <- glm_simple_coeffs$x[4]
ppdata3$CoeffRatingArea2B <- glm_simple_coeffs$x[5]
ppdata3$CoeffRatingArea3A <- glm_simple_coeffs$x[6]
ppdata3$CoeffRatingArea3B <- glm_simple_coeffs$x[7]
ppdata3$CoeffRatingArea4A <- glm_simple_coeffs$x[8]
ppdata3$CoeffRatingArea4B <- glm_simple_coeffs$x[9]
ppdata3$CoeffRatingArea5A <- glm_simple_coeffs$x[10]
ppdata3$CoeffRatingArea5B <- glm_simple_coeffs$x[11]
ppdata3$CoeffRatingArea6A <- glm_simple_coeffs$x[12]
ppdata3$CoeffNCD <- glm_simple_coeffs$x[13]
ppdata3$CoeffProtectedNCDY <- glm_simple_coeffs$x[14]
ppdata3$CoeffDrivingRestrictionNamed <- glm_simple_coeffs$x[15]
ppdata3$CoeffVehicleAge <- glm_simple_coeffs$x[16]
attach(ppdata3)
ppdata$NewPrem <- ( 500 *
exp(CoeffMale * GenderMale ) *
exp(CoeffRatingArea1B * RatingArea1B ) *
exp(CoeffRatingArea2A * RatingArea2A ) *
exp(CoeffRatingArea2B * RatingArea2B ) *
exp(CoeffRatingArea3A * RatingArea3A ) *
exp(CoeffRatingArea3B * RatingArea3B ) *
exp(CoeffRatingArea4A * RatingArea4A ) *
exp(CoeffRatingArea4B * RatingArea4B ) *
exp(CoeffRatingArea5A * RatingArea5A ) *
exp(CoeffRatingArea5B * RatingArea5B ) *
exp(CoeffRatingArea6A * RatingArea6A ) *
exp(CoeffNCD * ppdata$NCD ) *
exp(CoeffProtectedNCDY * ProtectedNCDY ) *
exp(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) *
exp(CoeffVehicleAge * ppdata$VehicleAge )
)
View(ppdata3)
levels(ppdata3)
names(ppdata3)
ppdata$NewPrem <- ( 500 *
exp(CoeffMale * ppdata3$GenderMale ) *
exp(CoeffRatingArea1B * RatingArea1B ) *
exp(CoeffRatingArea2A * RatingArea2A ) *
exp(CoeffRatingArea2B * RatingArea2B ) *
exp(CoeffRatingArea3A * RatingArea3A ) *
exp(CoeffRatingArea3B * RatingArea3B ) *
exp(CoeffRatingArea4A * RatingArea4A ) *
exp(CoeffRatingArea4B * RatingArea4B ) *
exp(CoeffRatingArea5A * RatingArea5A ) *
exp(CoeffRatingArea5B * RatingArea5B ) *
exp(CoeffRatingArea6A * RatingArea6A ) *
exp(CoeffNCD * ppdata$NCD ) *
exp(CoeffProtectedNCDY * ProtectedNCDY ) *
exp(CoeffDrivingRestrictionNamed * DrivingRestrictionNamed ) *
exp(CoeffVehicleAge * ppdata$VehicleAge )
)
ppdata3$NewPrem <- ( 500 *
exp(ppdata3$CoeffMale * ppdata3$GenderMale ) *
exp(ppdata3$CoeffRatingArea1B * ppdata3$RatingArea1B ) *
exp(ppdata3$CoeffRatingArea2A * ppdata3$RatingArea2A ) *
exp(ppdata3$CoeffRatingArea2B * ppdata3$RatingArea2B ) *
exp(ppdata3$CoeffRatingArea3A * ppdata3$RatingArea3A ) *
exp(ppdata3$CoeffRatingArea3B * ppdata3$RatingArea3B ) *
exp(ppdata3$CoeffRatingArea4A * ppdata3$RatingArea4A ) *
exp(ppdata3$CoeffRatingArea4B * ppdata3$RatingArea4B ) *
exp(ppdata3$CoeffRatingArea5A * ppdata3$RatingArea5A ) *
exp(ppdata3$CoeffRatingArea5B * ppdata3$RatingArea5B ) *
exp(ppdata3$CoeffRatingArea6A * ppdata3$RatingArea6A ) *
exp(ppdata3$CoeffNCD * ppdata3$NCD ) *
exp(ppdata3$CoeffProtectedNCDY * ppdata3$ProtectedNCDY ) *
exp(ppdata3$CoeffDrivingRestrictionNamed * ppdata3$DrivingRestrictionNamed ) *
exp(ppdata3$CoeffVehicleAge * ppdata3$$VehicleAge )
)
ppdata3$NewPrem <- ( 500 *
exp(ppdata3$CoeffMale * ppdata3$GenderMale ) *
exp(ppdata3$CoeffRatingArea1B * ppdata3$RatingArea1B ) *
exp(ppdata3$CoeffRatingArea2A * ppdata3$RatingArea2A ) *
exp(ppdata3$CoeffRatingArea2B * ppdata3$RatingArea2B ) *
exp(ppdata3$CoeffRatingArea3A * ppdata3$RatingArea3A ) *
exp(ppdata3$CoeffRatingArea3B * ppdata3$RatingArea3B ) *
exp(ppdata3$CoeffRatingArea4A * ppdata3$RatingArea4A ) *
exp(ppdata3$CoeffRatingArea4B * ppdata3$RatingArea4B ) *
exp(ppdata3$CoeffRatingArea5A * ppdata3$RatingArea5A ) *
exp(ppdata3$CoeffRatingArea5B * ppdata3$RatingArea5B ) *
exp(ppdata3$CoeffRatingArea6A * ppdata3$RatingArea6A ) *
exp(ppdata3$CoeffNCD * ppdata3$NCD ) *
exp(ppdata3$CoeffProtectedNCDY * ppdata3$ProtectedNCDY ) *
exp(ppdata3$CoeffDrivingRestrictionNamed * ppdata3$DrivingRestrictionNamed ) *
exp(ppdata3$CoeffVehicleAge * ppdata3$VehicleAge )
)
View(ppdata3)
ppdata$NewPrem <- ( 500 *
exp(ppdata3$CoeffMale * ppdata3$GenderMale ) *
exp(ppdata3$CoeffRatingArea1B * ppdata3$RatingArea1B ) *
exp(ppdata3$CoeffRatingArea2A * ppdata3$RatingArea2A ) *
exp(ppdata3$CoeffRatingArea2B * ppdata3$RatingArea2B ) *
exp(ppdata3$CoeffRatingArea3A * ppdata3$RatingArea3A ) *
exp(ppdata3$CoeffRatingArea3B * ppdata3$RatingArea3B ) *
exp(ppdata3$CoeffRatingArea4A * ppdata3$RatingArea4A ) *
exp(ppdata3$CoeffRatingArea4B * ppdata3$RatingArea4B ) *
exp(ppdata3$CoeffRatingArea5A * ppdata3$RatingArea5A ) *
exp(ppdata3$CoeffRatingArea5B * ppdata3$RatingArea5B ) *
exp(ppdata3$CoeffRatingArea6A * ppdata3$RatingArea6A ) *
exp(ppdata3$CoeffNCD * ppdata3$NCD ) *
exp(ppdata3$CoeffProtectedNCDY * ppdata3$ProtectedNCDY ) *
exp(ppdata3$CoeffDrivingRestrictionNamed * ppdata3$DrivingRestrictionNamed ) *
exp(ppdata3$CoeffVehicleAge * ppdata3$VehicleAge )
)
NewPrem <- ( 500 *
exp(ppdata3$CoeffMale * ppdata3$GenderMale ) *
exp(ppdata3$CoeffRatingArea1B * ppdata3$RatingArea1B ) *
exp(ppdata3$CoeffRatingArea2A * ppdata3$RatingArea2A ) *
exp(ppdata3$CoeffRatingArea2B * ppdata3$RatingArea2B ) *
exp(ppdata3$CoeffRatingArea3A * ppdata3$RatingArea3A ) *
exp(ppdata3$CoeffRatingArea3B * ppdata3$RatingArea3B ) *
exp(ppdata3$CoeffRatingArea4A * ppdata3$RatingArea4A ) *
exp(ppdata3$CoeffRatingArea4B * ppdata3$RatingArea4B ) *
exp(ppdata3$CoeffRatingArea5A * ppdata3$RatingArea5A ) *
exp(ppdata3$CoeffRatingArea5B * ppdata3$RatingArea5B ) *
exp(ppdata3$CoeffRatingArea6A * ppdata3$RatingArea6A ) *
exp(ppdata3$CoeffNCD * ppdata3$NCD ) *
exp(ppdata3$CoeffProtectedNCDY * ppdata3$ProtectedNCDY ) *
exp(ppdata3$CoeffDrivingRestrictionNamed * ppdata3$DrivingRestrictionNamed ) *
exp(ppdata3$CoeffVehicleAge * ppdata3$VehicleAge )
)
View(ppdata3)
View(ppdata_new)
View(ppdata_new)
View(glm_simple_coeffs)
levels(ppdata_new$NCD)
revalue(ppdata_new$NCD, c("4+" = "4")) -> ppdata_new$NCD
levels(ppdata_new$NCD)
revalue(ppdata_new$NCD, c("Unknown" = "3.5")) -> ppdata_new$NCD
levels(ppdata_new$NCD)
ppdata_new$NCD <- as.numeric(ppdata_new$NCD)
View(ppdata_new)
ppdata3 <- dummy.data.frame(ppdata_new) #dummies help picking the right coefficient for the right variable.
names(ppdata3)
